[global]
# node_id = 1001
# host = "localhost"
# cluster_name = 'cluster_xxx'
# store_metrics = true


[deployment]
# mode = 'query_tskv'
# cpu = 8
# memory = 16

[meta]
# service_addr = ["127.0.0.1:8901"]
# report_time_interval = '30s'

[query]
# max_server_connections = 10240
# query_sql_limit = "16M" # 16,777,216 bytes
# write_sql_limit = "160M" # 167,772,160 bytes
# auth_enabled = false
# read_timeout = "3s"
# write_timeout = "3s"
# stream_trigger_cpu = 1
# stream_executor_cpu = 2

[storage]

## The directory where database files stored.
# Directory for summary:    $path/summary
# Directory for index:      $path/$database/data/id/index
# Directory for tsm:        $path/$database/data/id/tsm
# Directory for delta:      $path/$database/data/id/delta
path = '/var/lib/cnosdb/data'

## The maximum file size of summary file.
# max_summary_size = "128M" # 134,217,728 bytes

## The maximum file size of a level is as follows:
## $base_file_size * level * $compact_trigger_file_num
# base_file_size = "16M" # 16,777,216 bytes

## The maxmimum amount of flush requests in memory
# flush_req_channel_cap = 16

## The maximum count of opened file handles (for query) in each vnode.
# max_cached_readers = 32

## Whether to enable compaction.
# enable_compaction = true

## The maxmimum level of a data file (from 0 to 4).
# max_level = 4

# Trigger of compaction using the number of level 0 files.
# compact_trigger_file_num = 4

## Duration since last write to trigger compaction.
# compact_trigger_cold_duration = "1h"

## The maximum size of all files in a compaction.
# max_compact_size = "2G" # 2,147,483,648 bytes

## The maximum concurrent compactions.
# max_concurrent_compaction = 4

## If true, write request will not be checked in detail.
# strict_write = false

## copyinto trigger flush size
#copyinto_trigger_flush_size = "128M" # 134,217,728 bytes

[wal]

## If true, write requets on disk before writing to memory.
# enabled = true

## The directory where write ahead logs stored.
path = '/var/lib/cnosdb/wal'

## The maxmimum amount of write request in memory.
# wal_req_channel_cap = 64

## The maximum size of a WAL.
# max_file_size = '1G' # 1,073,741,824 bytes

## Trigger all vnode flushing if size of WALs exceeds this value.
# flush_trigger_total_file_size = '2G' # 2,147,483,648 bytes

## If true, fsync will be called after every WAL writes.
# sync = false

## Interval for automatic WAL fsync.
# sync_interval = '0' # h, m, s

[cache]

## The maximum size of a mutable cache.
# max_buffer_size = '128M' # 134,217,728 bytes

## The partion number of memcache cache,default equal to cpu number
# partition = 10

[log]
# level = 'info'
path = '/var/log/cnosdb'
## Tokio trace, default turn off tokio trace
# tokio_trace = { addr = "127.0.0.1:6669" }

[security]
# [security.tls_config]
# certificate = "/etc/config/tls/server.crt"
# private_key = "/etc/config/tls/server.key"

[service]
http_listen_port = 8902
grpc_listen_port = 8903
grpc_enable_gzip = false
flight_rpc_listen_port = 8904
tcp_listen_port = 8905
vector_listen_port = 8906
enable_report = true


[cluster]
# raft_logs_to_keep = 5000
# lmdb_max_map_size = "1G"
# heartbeat_interval = "10s"
# send_append_entries_timeout = "5s"
# install_snapshot_timeout = "1h"

# [trace]
# auto_generate_span = false
# [trace.log]
# path = '/var/log/cnosdb'
# [trace.jaeger]
# jaeger_agent_endpoint = 'http://localhost:14268/api/traces'
# max_concurrent_exports = 2
# max_queue_size = 4096
